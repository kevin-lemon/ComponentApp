apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
android {
    compileSdkVersion app_android.compileSdkVersion
    buildToolsVersion app_android.buildToolsVersion

    defaultConfig {
        applicationId app_android.applicationId
        minSdkVersion app_android.minSdkVersion
        targetSdkVersion app_android.targetSdkVersion
        versionCode app_android.versionCode
        versionName  app_android.versionName

        testInstrumentationRunner app_android.testInstrumentationRunner
        buildConfigField ("boolean","isRelease",String.valueOf(isDebugApp))

        // 在gradle文件中配置选项参数值（用于APT传参接收）
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [moduleName: project.getName(), packageNameForAPT: packageNameForAPT]
            }
        }

    }
    buildTypes {

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation project(':common')
    if (!isDebugApp){
        implementation project(':order')
        implementation project(':personal')
    }
    implementation app_dependencies.kotlin_stdlib
    implementation app_dependencies.kotlin_reflect
    implementation app_dependencies.appcompat
    implementation app_dependencies.corektx
    implementation app_dependencies.constraintlayout
    testImplementation app_dependencies.junit
    androidTestImplementation app_dependencies.test_ext_junit
    androidTestImplementation app_dependencies.espressocore
    // 注解模块
    implementation project(":wrouter_annotation")
    // 注解处理器
    kapt project(':wrouter_compiler')
}
